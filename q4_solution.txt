1- Testing is_vector:
is_vector([]) =  True
is_vector([10]) =  True
is_vector([10, 20]) =  True
is_vector(10) =  False
is_vector([3, 4.5]) =  False
is_vector([[]]) =  False
is_vector([[1, 2], [3, 4]]) =  False

2- Testing is_matrixis_matrix([]) =  True
is_matrix([5]) =  True
is_matrix([[1, 2], [3, 4]]) =  True
is_matrix([[1], [2], [3]]) =  True
is_matrix([[1, 2, 3], [4, 5, 6]]) =  True
is_matrix(5) =  False
is_matrix([5.5]) =  False
is_matrix([[1, 2, 3], [4, 5]]) =  False

4/5/6- Testing size functions
get_r([])    =  0
get_c([])    =  0
get_size([]) =  [0, 0]

get_r([1, 2, 3])     =  1
get_c([1, 2, 3])     =  3
get_size([1, 2, 3])  =  [1, 3]

get_r([[1, 2], [3, 4], [5, 6]])    =  3
get_c([[1, 2], [3, 4], [5, 6]])    =  2
get_size([[1, 2], [3, 4], [5, 6]]) =  [3, 2]

get_r([[1, 2], [3]])    =  Error (get_r): Invalid input
get_c([[1, 2], [3]])    =  Error (get_c): Invalid input
get_size([[1, 2], [3]]) =  Error (get_size): Invalid input

7- Testing is_square
is_square([])    =  True
is_square([5])    =  True
is_square([5, 6])    =  False
is_square([[1, 2], [3, 4]])    =  True
is_square([5.5])    =  False

8/9/10- Testing getter functions
get_row([[1, 2, 3], [4, 5, 6]],0)        = [1, 2, 3]
get_Column([[1, 2, 3], [4, 5, 6]],1)     = [[2], [5]]
get_element([[1, 2, 3], [4, 5, 6]],0,1) = 2

get_row([[1, 2, 3], [4, 5, 6]],2)        = Error(get_row): invalid row number
get_Column([[1, 2, 3], [4, 5, 6]],2)     = [[3], [6]]
get_element([[1, 2, 3], [4, 5, 6]],2,2) = Error(get_element): invalid element position

get_row([[1, 2, 3], [4, 5, 6]],1)        = [4, 5, 6]
get_Column([[1, 2, 3], [4, 5, 6]],3)     = Error(get_column): invalid column number
get_element([[1, 2, 3], [4, 5, 6]],1,3) = Error(get_element): invalid element position

get_row([[1, 2, 3], []],1)        = Error(get_row): invalid input matrix
get_Column([[1, 2, 3], []],3)     = Error (get_column): invalid input matrix
get_element([[1, 2, 3], []],1,3) = Error (get_element): invalid input matrix

11- Testing new_matrix
new_matrix(0,0,0)=
[]
new_matrix(0,1,0)=
Error(new_matrix): invalid size
new_matrix(1,1,0)=
[0]
new_matrix(2,1,0)=
[[0], [0]]
new_matrix(1,2,0)=
[0, 0]
new_matrix(3,3,0)=
[[0, 0, 0], [0, 0, 0], [0, 0, 0]]
new_matrix(-1,3,0)=
Error(new_matrix): invalid size
new_matrix(3,-5,0)=
Error(new_matrix): invalid size
new_matrix(3,5,3.5)=
Error(new_matrix): invalid num

12- Testing get_I
get_I(-1)    = Error(get_I): invalid size
get_I(0)    =  Error(get_I): invalid size
get_I(1)    =  [1]
get_I(2)    =  [[1, 0], [0, 1]]
get_I(3)    =  [[1, 0, 0], [0, 1, 0], [0, 0, 1]]

13- Testing is_identity
is_identity([1]) = True
is_identity([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) = True
is_identity([[1, 0], [1, 1]]) = False
is_identity([[1, 0], [0, 1, 0]]) = False

14- Testing scalar_mul
scalar_mul([[1, 2], [3, 4]],10) = [[10, 20], [30, 40]]
scalar_mul([1, 2, 3, 4],10) = [10, 20, 30, 40]
scalar_mul([],10) = Error(scalar_mul): invalid input
scalar_mul([1, 2, 3, [4]],10) = Error(scalar_mul): invalid input
scalar_mul([[1, 2], [3, 4]],[10]) = Error(scalar_mul): invalid input

15- Testing mul
mul([[1, 2], [3, 4]],[[10, 20], [30, 40]])=
[[70, 100], [150, 220]]
mul([[1, 2, 3], [5, 6, 7]],[[10, 20], [30, 40], [50, 60]])= [[220, 280], [580, 760]]
mul([5],[10])= [50]
mul([0, 1, 2],[[0], [1], [2]])= [5]
mul([[0], 1],[1, 0])= Error(mul): invalid input
mul([1, 0],[[0], 1])= Error(mul): invalid input
mul([[10, 20], [30, 40], [50, 60]],[[1, 2, 3], [5, 6, 7]])= [[60, 160], [180, 320], [300, 480]]
mul([[1, 2, 3], [5, 6, 7]],[[10, 20], [30, 40]])= [[70, 100], [230, 340]]

16- Testing matrix_mod
matrix_mod([[1, 2], [3, 4]],2)= [[1, 0], [1, 0]]
matrix_mod([1, 2, 3, 4],2)= [1, 0, 1, 0]
matrix_mod([[3], [5]],3)= [[0], [2]]
matrix_mod([[3], [5]],0)= Error(matrix_mod): invalid mod
matrix_mod([3, [5]],6)= Error(matrix_mod): invalid input

17- Testing det
det([[1, 2], [3, 4]])= -2
det([10])= Error(det): Unsupported matrix size
det([[1, 1, 1], [2, 2, 2], [3, 3, 3]])= Error(det): Unsupported matrix size
det([[1, 1, 1], [2, 2]])= Error(det): invalid input

18- Testing inverse
inverse([[1, 4], [8, 11]],26)= [[23, 20], [14, 21]]
inverse([[4, 3], [1, 1]],5)= [[1, 2], [4, 4]]
inverse([[1, 4], [8, 10]],26)= Error(inverse): matrix is not invertible
inverse([1, 4, 8, 10],15)= Error(inverse): Unsupported matrix size
inverse([[4, 3], [1, 1]],-5)= Error(inverse): invalid mod
inverse([[1, 2, 3], [4, 5, 6], [7, 8, 9]],7)= Error(inverse): Unsupported matrix size
inverse([[1, 2, 3], [4, 5]],7)= Error(inverse): invalid input
